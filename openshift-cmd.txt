3scale API Management
     ---------
     3scale API Management main system

     Login on https://3scale-admin.my.exmaple.com as admin/2n3w5r22

     * With parameters:
        * AMP_RELEASE=2.8
        * APP_LABEL=3scale-api-management
        * TENANT_NAME=3scale
        * RWX_STORAGE_CLASS=null
        * AMP_BACKEND_IMAGE=registry.redhat.io/3scale-amp2/backend-rhel7:3scale2.8
        * AMP_ZYNC_IMAGE=registry.redhat.io/3scale-amp2/zync-rhel7:3scale2.8
        * AMP_APICAST_IMAGE=registry.redhat.io/3scale-amp2/apicast-gateway-rhel8:3scale2.8
        * AMP_SYSTEM_IMAGE=registry.redhat.io/3scale-amp2/system-rhel7:3scale2.8
        * ZYNC_DATABASE_IMAGE=registry.redhat.io/rhscl/postgresql-10-rhel7
        * MEMCACHED_IMAGE=registry.redhat.io/3scale-amp2/memcached-rhel7:3scale2.8
        * IMAGESTREAM_TAG_IMPORT_INSECURE=false
        * SYSTEM_DATABASE_IMAGE=registry.redhat.io/rhscl/mysql-57-rhel7:5.7
        * REDIS_IMAGE=registry.redhat.io/rhscl/redis-32-rhel7:3.2
        * System MySQL User=mysql
        * System MySQL Password=vuuv6sq5 # generated
        * System MySQL Database Name=system
        * System MySQL Root password.=651fke60 # generated
        * WILDCARD_DOMAIN=my.exmaple.com
        * SYSTEM_BACKEND_USERNAME=3scale_api_user
        * SYSTEM_BACKEND_PASSWORD=bhgvo1bu # generated
        * SYSTEM_BACKEND_SHARED_SECRET=xfdv3vfr # generated
        * SYSTEM_APP_SECRET_KEY_BASE=2471bddd1c07d5e1586b273c12ba1c65083cc03e200161212801124487bcdd5720e477d2da0d0aaad73a1105a3401edc3213c06c80bd24666a27d2ac855c1614 # generated
        * ADMIN_PASSWORD=2n3w5r22 # generated
        * ADMIN_USERNAME=admin
        * ADMIN_EMAIL=
        * ADMIN_ACCESS_TOKEN=f84gb44wmge8fumr # generated
        * MASTER_NAME=master
        * MASTER_USER=master
        * MASTER_PASSWORD=alvigq7l # generated
        * MASTER_ACCESS_TOKEN=j5ya7ex3 # generated
        * RECAPTCHA_PUBLIC_KEY=
        * RECAPTCHA_PRIVATE_KEY=
        * SYSTEM_REDIS_URL=redis://system-redis:6379/1
        * SYSTEM_MESSAGE_BUS_REDIS_URL=
        * SYSTEM_REDIS_NAMESPACE=
        * SYSTEM_MESSAGE_BUS_REDIS_NAMESPACE=
        * Zync Database PostgreSQL Connection Password=vuJw8IJmwNPqO7U6 # generated
        * ZYNC_SECRET_KEY_BASE=OlJEC2SFUQ71oE7g # generated
        * ZYNC_AUTHENTICATION_TOKEN=RYOnBq7yYtCkXcKm # generated
        * APICAST_ACCESS_TOKEN=n02xc422 # generated
        * APICAST_MANAGEMENT_API=status
        * APICAST_OPENSSL_VERIFY=false
        * APICAST_RESPONSE_CODES=true
        * APICAST_REGISTRY_URL=http://apicast-staging:8090/policies

oc create secret generic threescale-registry-auth     --from-file=.dockerconfigjson=/Users/ffang/.docker/config.json     --type=kubernetes.io/dockerconfigjson
//install 3scale 2.8 on openshift
oc create -f https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/2.8.0.GA/3scale-image-streams.yml
oc new-app -f https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/2.8.0.GA/amp/amp.yml --param WILDCARD_DOMAIN=my.exmaple.com //this take a while to pull all necessary images
--> Deploying template "openshift/3scale-api-management" for "https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/2.8.0.GA/amp/amp.yml" to project openshift




oc import-image registry.redhat.io/3scale-amp2/zync-rhel7:latest --confirm(may not need this anymore)
https://github.com/minishift/minishift/issues/2621
mvn clean fabric8:deploy -Popenshift -DJAVA_OPTIONS="-Dsso.server=https://sso-openshift.192.168.64.13.nip.io -Dweather.service.host=192.168.0.11"
oc set env dc/camel-bridge-springboot-xml JAVA_OPTIONS='-Dsso.server=https://sso-openshift.192.168.64.13.nip.io'(don't need this)
for resource in sso74-image-stream.json \
  sso74-https.json \
  sso74-postgresql.json \
  sso74-postgresql-persistent.json \
  sso74-x509-https.json \
  sso74-x509-postgresql-persistent.json
do
  oc create -n openshift -f \
  https://raw.githubusercontent.com/jboss-container-images/redhat-sso-7-openshift-image/sso74-dev/templates/${resource}
done

oc -n openshift import-image redhat-sso74-openshift:1.0(no this)

oc policy add-role-to-user view system:serviceaccount:$(oc project -q):default

oc new-app --template=sso74-x509-postgresql-persistent


* With parameters:
        * Application Name=sso
        * Custom RH-SSO Server Hostname=
        * JGroups Cluster Password=JlF8Ku43pCaCIFyFTbe55wA0jeNTIsXs # generated
        * Database JNDI Name=java:jboss/datasources/KeycloakDS
        * Database Name=root
        * Datasource Minimum Pool Size=
        * Datasource Maximum Pool Size=
        * Datasource Transaction Isolation=
        * PostgreSQL Maximum number of connections=
        * PostgreSQL Shared Buffers=
        * Database Username=user6kY # generated
        * Database Password=KsugY5jxSj6pnL1cXoOCsIhORbY0iF80 # generated
        * Database Volume Capacity=1Gi
        * ImageStream Namespace=openshift
        * RH-SSO Administrator Username=xnDx1dAM # generated
        * RH-SSO Administrator Password=hBFKPfvb8HvUEhX5KGxLUHPtQJR4eVyg # generated
        * RH-SSO Realm=
        * RH-SSO Service Username=
        * RH-SSO Service Password=
        * PostgreSQL Image Stream Tag=10
        * Container Memory Limit=1Gi


./standalone.sh -Dkeycloak.migration.action=export -Dkeycloak.migration.realmName=fuse7karaf -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=bak.json
./standalone.sh -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=<FILE TO IMPORT> -Dkeycloak.migration.strategy=OVERWRITE_EXISTING

./standalone.sh -Djboss.socket.binding.port-offset=100 -Djboss.bind.address=192.168.0.11

minishift timezone --set America/Toronto
579  ./minishift start
  580  oc whoami
  582  oc login -u system:admin
  583  oc adm policy add-cluster-role-to-user cluster-admin developer
  584  oc login -u developer -p developer
  585  oc project openshift
  586  oc create secret generic yfang     --from-file=.dockerconfigjson=/Users/ffang/.docker/config.json     --type=kubernetes.io/dockerconfigjson
  587  oc secrets link default yfang --for=pull
  588  oc secrets link builder yfang
  589  BASEURL=https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001
  590  oc get is
  591  oc create  -f ${BASEURL}/fis-image-streams.json
  594  oc get is
  595  oc process --parameters -f https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001/fis-console-namespace-template.json
  596  oc create  -f ${BASEURL}/fis-console-namespace-template.json
  597  oc new-app -f https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001/fis-console-namespace-template.json
  599  for template in eap-camel-amq-template.json  eap-camel-cdi-template.json  eap-camel-cxf-jaxrs-template.json  eap-camel-cxf-jaxws-template.json  eap-camel-jpa-template.json  karaf-camel-amq-template.json  karaf-camel-log-template.json  karaf-camel-rest-sql-template.json  karaf-cxf-rest-template.json  spring-boot-camel-amq-template.json  spring-boot-camel-config-template.json  spring-boot-camel-drools-template.json  spring-boot-camel-infinispan-template.json  spring-boot-camel-rest-sql-template.json  spring-boot-camel-rest-3scale-template.json  spring-boot-camel-template.json  spring-boot-camel-xa-template.json  spring-boot-camel-xml-template.json  spring-boot-cxf-jaxrs-template.json  spring-boot-cxf-jaxws-template.json ;  do  oc create  -f  ${BASEURL}/quickstarts/${template};  done
  600  for template in spring-boot-2-camel-amq-template.json  spring-boot-2-camel-config-template.json  spring-boot-2-camel-drools-template.json  spring-boot-2-camel-infinispan-template.json  spring-boot-2-camel-rest-3scale-template.json  spring-boot-2-camel-rest-sql-template.json  spring-boot-2-camel-template.json  spring-boot-2-camel-xa-template.json  spring-boot-2-camel-xml-template.json  spring-boot-2-cxf-jaxrs-template.json  spring-boot-2-cxf-jaxws-template.json  spring-boot-2-cxf-jaxrs-xml-template.json  spring-boot-2-cxf-jaxws-xml-template.json ;  do oc create  -f  https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-sb2-760039-redhat-00001/quickstarts/${template};  done


mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate \
  -DarchetypeCatalog=https://maven.repository.redhat.com/ga/io/fabric8/archetypes/archetypes-catalog/2.2.0.fuse-sb2-760038-redhat-00001/archetypes-catalog-2.2.0.fuse-sb2-760038-redhat-00001-archetype-catalog.xml \
  -DarchetypeGroupId=org.jboss.fuse.fis.archetypes \
  -DarchetypeArtifactId=spring-boot-cxf-jaxws-xml-archetype \
  -DarchetypeVersion=2.2.0.fuse-sb2-760038-redhat-00001
