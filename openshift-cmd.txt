use 3scale as http gateway
mvn clean  test -Dtest=JaxRsClientTest -Dsso.server=https://sso-openshift.192.168.64.33.nip.io -Dcamel.route.host=http://api-3scale-apicast-staging.192.168.64.33.nip.io 
backend url is http://camel-bridge-springboot-xml-openshift.192.168.64.33.nip.io:80 and must have POST mapping rule
ac07c312-042b-48df-9841-d4b9a5470b20
run locally
mvn clean spring-boot:run -Dsso.server=https://192.168.0.11:8543 -Dweather.service.host=192.168.0.11
mvn clean test -Dtest=JaxRsClientTest -Dsso.server=https://192.168.0.11:8543 -Dcamel.route.host=http://192.168.0.11:8080
--> Deploying template "openshift/sso74-x509-postgresql-persistent" to project openshift

     Red Hat Single Sign-On 7.4 on OpenJDK + PostgreSQL (Persistent)
     ---------
     An example application based on RH-SSO 7.4 on OpenJDK image. For more information about using this template, see https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso74-dev/docs.

     A new persistent RH-SSO service (using PostgreSQL) has been created in your project. The admin username/password for accessing the master realm via the RH-SSO console is tprYtXP1/nEjf7fojv11FmhJ5eaqadoh0SI2gvlls. The username/password for accessing the PostgreSQL database "root" is userqxe/XNYRjL74CrJEWW7HiSYEdH5FMKVSDytx. The HTTPS keystore used for serving secure content, the JGroups keystore used for securing JGroups communications, and server truststore used for securing RH-SSO requests were automatically created via OpenShift's service serving x509 certificate secrets.

     * With parameters:
        * Application Name=sso
        * Custom RH-SSO Server Hostname=
        * JGroups Cluster Password=1whGRnsAWu162u0e4P6jNpLn5ysJLWjg # generated
        * Database JNDI Name=java:jboss/datasources/KeycloakDS
        * Database Name=root
        * Datasource Minimum Pool Size=
        * Datasource Maximum Pool Size=
        * Datasource Transaction Isolation=
        * PostgreSQL Maximum number of connections=
        * PostgreSQL Shared Buffers=
        * Database Username=userqxe # generated
        * Database Password=XNYRjL74CrJEWW7HiSYEdH5FMKVSDytx # generated
        * Database Volume Capacity=1Gi
        * ImageStream Namespace=openshift
        * RH-SSO Administrator Username=tprYtXP1 # generated
        * RH-SSO Administrator Password=nEjf7fojv11FmhJ5eaqadoh0SI2gvlls # generated
        * RH-SSO Realm=
        * RH-SSO Service Username=
        * RH-SSO Service Password=
        * PostgreSQL Image Stream Tag=10
        * Container Memory Limit=1Gi

--> Deploying template "3scale/3scale-api-management-eval" for "https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/2.8.0.GA/amp/amp-eval-tech-preview.yml" to project 3scale

     3scale API Management
     ---------
     3scale API Management main system (Evaluation)

     Login on https://3scale-admin.192.168.64.33.nip.io as admin/b6t784nt

     * With parameters:
        * AMP_RELEASE=2.8
        * APP_LABEL=3scale-api-management
        * TENANT_NAME=3scale
        * RWX_STORAGE_CLASS=null
        * AMP_BACKEND_IMAGE=registry.redhat.io/3scale-amp2/backend-rhel7:3scale2.8
        * AMP_ZYNC_IMAGE=registry.redhat.io/3scale-amp2/zync-rhel7:3scale2.8
        * AMP_APICAST_IMAGE=registry.redhat.io/3scale-amp2/apicast-gateway-rhel8:3scale2.8
        * AMP_SYSTEM_IMAGE=registry.redhat.io/3scale-amp2/system-rhel7:3scale2.8
        * ZYNC_DATABASE_IMAGE=registry.redhat.io/rhscl/postgresql-10-rhel7
        * MEMCACHED_IMAGE=registry.redhat.io/3scale-amp2/memcached-rhel7:3scale2.8
        * IMAGESTREAM_TAG_IMPORT_INSECURE=false
        * SYSTEM_DATABASE_IMAGE=registry.redhat.io/rhscl/mysql-57-rhel7:5.7
        * REDIS_IMAGE=registry.redhat.io/rhscl/redis-32-rhel7:3.2
        * System MySQL User=mysql
        * System MySQL Password=mrscfh4h # generated
        * System MySQL Database Name=system
        * System MySQL Root password.=xbi0ch3i # generated
        * WILDCARD_DOMAIN=192.168.64.33.nip.io
        * SYSTEM_BACKEND_USERNAME=3scale_api_user
        * SYSTEM_BACKEND_PASSWORD=kraji167 # generated
        * SYSTEM_BACKEND_SHARED_SECRET=8af5m6gb # generated
        * SYSTEM_APP_SECRET_KEY_BASE=726e63427173e58cbb68a63bdc60c7315565d6acd037caedeeb0050ecc0e6e41c3c7ec4aba01c17d8d8b7b7e3a28d6166d351a6238608bb84aa5d5b2dc02ae60 # generated
        * ADMIN_PASSWORD=b6t784nt # generated
        * ADMIN_USERNAME=admin
        * ADMIN_EMAIL=
        * ADMIN_ACCESS_TOKEN=k055jof4itblvwwn # generated
        * MASTER_NAME=master
        * MASTER_USER=master
        * MASTER_PASSWORD=buikudum # generated
        * MASTER_ACCESS_TOKEN=xa7wkt16 # generated
        * RECAPTCHA_PUBLIC_KEY=
        * RECAPTCHA_PRIVATE_KEY=
        * SYSTEM_REDIS_URL=redis://system-redis:6379/1
        * SYSTEM_MESSAGE_BUS_REDIS_URL=
        * SYSTEM_REDIS_NAMESPACE=
        * SYSTEM_MESSAGE_BUS_REDIS_NAMESPACE=
        * Zync Database PostgreSQL Connection Password=efyJdRccBbYcWtWl # generated
        * ZYNC_SECRET_KEY_BASE=dcmNGWtrjCReuJlQ # generated
        * ZYNC_AUTHENTICATION_TOKEN=3FKMAije3V3RWQQ8 # generated
        * APICAST_ACCESS_TOKEN=2ql8txu4 # generated
        * APICAST_MANAGEMENT_API=status
        * APICAST_OPENSSL_VERIFY=false
        * APICAST_RESPONSE_CODES=true
        * APICAST_REGISTRY_URL=http://apicast-staging:8090/policies
minishift start --memory 8GB --cpus 4
oc login -u system:admin
oc adm policy add-cluster-role-to-user cluster-admin developer
oc login -u developer
oc new-project bridge
oc create secret docker-registry threescale-registry-auth --docker-server=registry.redhat.io --docker-username="6340056|yfang" --docker-password="eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiI3MGIyNjA3ZmYyNGY0MDRhOWMzZjU4NzU0YTMxZGU5YiJ9.YK5bJZpUNu0Srbl6bhCaaz1PkDswi8vPYfzVWURWIaYAGn_B0bVJkaKqFfg_4J_9HoaJoV__Rs-wkTG5KXJOMAWN_fvX0GL1TEia8TXzqnCgdkkLmcVwF9b_lUriFSvmoov6xUIvi1LtA5Q5Vm9q8r-nryLXfgwwqY5QMXLVOddbdlT7695cV-z-D8K3Rd9j4tCcwcxMrZMmG5pLZTbPK2RlGmPeI1a_aV7Tcy9SAMLVP6wPw-EbB3m78wwv7C0V3e0K4Yho5A0yjmvXRPYW2ER-Zx981FTtNYi75nzxSPsV6EXg5DqKdXrsoogVq3odEchqJyzLJ6eDfJLZOvY7Z6nM9Yoh5CLP-TvdovilzKCnxDXOCa2BzmzD4W5vjXVDxwGyFVdLOpCtkIrgAm3iu8684DVC1sbwA5gL4qgNM6QnaxSoWHVfnkIii3At0o3IAgE0zsY-EWOsQ6hUFnVyQRVQmrjkwoh8f45ADgP6Y3zvPTq5uxaPSCXV4gniRKKFwxz96uvZoK6dEXw3WLMyGncpD1LGbWQ9lET7a-_huTEgOsFCh6ClS9nf0QABd-LP3BBNMK6q5lawL_6Ri9r3q0kE04fk50qQywO8swed5rjI9TwkS_6FU3UguObRNMdUGHcVRVmayhOtuBDxHi3rzEdDX-xaP2jm-PAdUCFH7RA"
oc secrets link default threescale-registry-auth --for=pull
oc secrets link builder threescale-registry-auth
oc new-app    --param WILDCARD_DOMAIN="$(minishift ip).nip.io"       -f https://raw.githubusercontent.com/3scale/3scale-amp-openshift-templates/2.8.0.GA/amp/amp-eval-tech-preview.yml //this takes about 8 mins on my machine and totally there are 15 pods started for this, tech-preview version has no resources limits, so more suitale on  my minishift
for resource in sso74-image-stream.json \
  sso74-https.json \
  sso74-postgresql.json \
  sso74-postgresql-persistent.json \
  sso74-x509-https.json \
  sso74-x509-postgresql-persistent.json
do
  oc create -f \
  https://raw.githubusercontent.com/jboss-container-images/redhat-sso-7-openshift-image/sso74-dev/templates/${resource}
done

oc policy add-role-to-user view system:serviceaccount:$(oc project -q):default

oc new-app --template=sso74-x509-postgresql-persistent 

BASEURL=https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001
oc create  -f ${BASEURL}/fis-image-streams.json
oc create  -f ${BASEURL}/fis-console-namespace-template.json
oc new-app -f https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001/fis-console-namespace-template.json
for template in eap-camel-amq-template.json  eap-camel-cdi-template.json  eap-camel-cxf-jaxrs-template.json  eap-camel-cxf-jaxws-template.json  eap-camel-jpa-template.json  karaf-camel-amq-template.json  karaf-camel-log-template.json  karaf-camel-rest-sql-template.json  karaf-cxf-rest-template.json  spring-boot-camel-amq-template.json  spring-boot-camel-config-template.json  spring-boot-camel-drools-template.json  spring-boot-camel-infinispan-template.json  spring-boot-camel-rest-sql-template.json  spring-boot-camel-rest-3scale-template.json  spring-boot-camel-template.json  spring-boot-camel-xa-template.json  spring-boot-camel-xml-template.json  spring-boot-cxf-jaxrs-template.json  spring-boot-cxf-jaxws-template.json ;  do  oc create  -f  ${BASEURL}/quickstarts/${template};  done
for template in spring-boot-2-camel-amq-template.json  spring-boot-2-camel-config-template.json  spring-boot-2-camel-drools-template.json  spring-boot-2-camel-infinispan-template.json  spring-boot-2-camel-rest-3scale-template.json  spring-boot-2-camel-rest-sql-template.json  spring-boot-2-camel-template.json  spring-boot-2-camel-xa-template.json  spring-boot-2-camel-xml-template.json  spring-boot-2-cxf-jaxrs-template.json  spring-boot-2-cxf-jaxws-template.json  spring-boot-2-cxf-jaxrs-xml-template.json  spring-boot-2-cxf-jaxws-xml-template.json ;  do oc create  -f  https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-sb2-760039-redhat-00001/quickstarts/${template};  done

6340056|yfang
eyJhbGciOiJSUzUxMiJ9.eyJzdWIiOiI3MGIyNjA3ZmYyNGY0MDRhOWMzZjU4NzU0YTMxZGU5YiJ9.YK5bJZpUNu0Srbl6bhCaaz1PkDswi8vPYfzVWURWIaYAGn_B0bVJkaKqFfg_4J_9HoaJoV__Rs-wkTG5KXJOMAWN_fvX0GL1TEia8TXzqnCgdkkLmcVwF9b_lUriFSvmoov6xUIvi1LtA5Q5Vm9q8r-nryLXfgwwqY5QMXLVOddbdlT7695cV-z-D8K3Rd9j4tCcwcxMrZMmG5pLZTbPK2RlGmPeI1a_aV7Tcy9SAMLVP6wPw-EbB3m78wwv7C0V3e0K4Yho5A0yjmvXRPYW2ER-Zx981FTtNYi75nzxSPsV6EXg5DqKdXrsoogVq3odEchqJyzLJ6eDfJLZOvY7Z6nM9Yoh5CLP-TvdovilzKCnxDXOCa2BzmzD4W5vjXVDxwGyFVdLOpCtkIrgAm3iu8684DVC1sbwA5gL4qgNM6QnaxSoWHVfnkIii3At0o3IAgE0zsY-EWOsQ6hUFnVyQRVQmrjkwoh8f45ADgP6Y3zvPTq5uxaPSCXV4gniRKKFwxz96uvZoK6dEXw3WLMyGncpD1LGbWQ9lET7a-_huTEgOsFCh6ClS9nf0QABd-LP3BBNMK6q5lawL_6Ri9r3q0kE04fk50qQywO8swed5rjI9TwkS_6FU3UguObRNMdUGHcVRVmayhOtuBDxHi3rzEdDX-xaP2jm-PAdUCFH7RA




mvn clean fabric8:deploy -Popenshift -DJAVA_OPTIONS="-Dsso.server=https://sso-openshift.192.168.64.33.nip.io -Dweather.service.host=192.168.0.11" -Dfabric8.generator.from=bridge/fuse7-java-openshift:1.6

oc policy add-role-to-user view system:serviceaccount:$(oc project -q):default





./standalone.sh -Dkeycloak.migration.action=export -Dkeycloak.migration.realmName=fuse7karaf -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=bak.json
./standalone.sh -Dkeycloak.migration.action=import -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=<FILE TO IMPORT> -Dkeycloak.migration.strategy=OVERWRITE_EXISTING

./standalone.sh -Djboss.socket.binding.port-offset=100 -Djboss.bind.address=192.168.0.11

minishift timezone --set America/Toronto
579  ./minishift start
  580  oc whoami
  582  oc login -u system:admin
  583  oc adm policy add-cluster-role-to-user cluster-admin developer
  584  oc login -u developer -p developer
  585  oc project openshift
  586  oc create secret generic yfang     --from-file=.dockerconfigjson=/Users/ffang/.docker/config.json     --type=kubernetes.io/dockerconfigjson
  587  oc secrets link default yfang --for=pull
  588  oc secrets link builder yfang
  589  BASEURL=https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001
  590  oc get is
  591  oc create  -f ${BASEURL}/fis-image-streams.json
  594  oc get is
  595  oc process --parameters -f https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001/fis-console-namespace-template.json
  596  oc create  -f ${BASEURL}/fis-console-namespace-template.json
  597  oc new-app -f https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-760043-redhat-00001/fis-console-namespace-template.json
  599  for template in eap-camel-amq-template.json  eap-camel-cdi-template.json  eap-camel-cxf-jaxrs-template.json  eap-camel-cxf-jaxws-template.json  eap-camel-jpa-template.json  karaf-camel-amq-template.json  karaf-camel-log-template.json  karaf-camel-rest-sql-template.json  karaf-cxf-rest-template.json  spring-boot-camel-amq-template.json  spring-boot-camel-config-template.json  spring-boot-camel-drools-template.json  spring-boot-camel-infinispan-template.json  spring-boot-camel-rest-sql-template.json  spring-boot-camel-rest-3scale-template.json  spring-boot-camel-template.json  spring-boot-camel-xa-template.json  spring-boot-camel-xml-template.json  spring-boot-cxf-jaxrs-template.json  spring-boot-cxf-jaxws-template.json ;  do  oc create  -f  ${BASEURL}/quickstarts/${template};  done
  600  for template in spring-boot-2-camel-amq-template.json  spring-boot-2-camel-config-template.json  spring-boot-2-camel-drools-template.json  spring-boot-2-camel-infinispan-template.json  spring-boot-2-camel-rest-3scale-template.json  spring-boot-2-camel-rest-sql-template.json  spring-boot-2-camel-template.json  spring-boot-2-camel-xa-template.json  spring-boot-2-camel-xml-template.json  spring-boot-2-cxf-jaxrs-template.json  spring-boot-2-cxf-jaxws-template.json  spring-boot-2-cxf-jaxrs-xml-template.json  spring-boot-2-cxf-jaxws-xml-template.json ;  do oc create  -f  https://raw.githubusercontent.com/jboss-fuse/application-templates/application-templates-2.1.0.fuse-sb2-760039-redhat-00001/quickstarts/${template};  done
mvn fabric8:deploy -Dfabric8.generator.from=bridge/fuse7-java-openshift:1.6

mvn org.apache.maven.plugins:maven-archetype-plugin:2.4:generate \
  -DarchetypeCatalog=https://maven.repository.redhat.com/ga/io/fabric8/archetypes/archetypes-catalog/2.2.0.fuse-sb2-760038-redhat-00001/archetypes-catalog-2.2.0.fuse-sb2-760038-redhat-00001-archetype-catalog.xml \
  -DarchetypeGroupId=org.jboss.fuse.fis.archetypes \
  -DarchetypeArtifactId=spring-boot-cxf-jaxws-xml-archetype \
  -DarchetypeVersion=2.2.0.fuse-sb2-760038-redhat-00001
